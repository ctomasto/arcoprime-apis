openapi: 3.1.0
info:
  title: supplier-api
  version: '1.0'
  description: API de proveedores
  contact:
    name: Arcoprime
  summary: API de proveedores
servers:
  - url: 'http://localhost:3000'
paths:
  '/supplier/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get Supplier Info by Supplier ID
      tags:
        - supplier
      responses:
        '200':
          description: Supplier Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  supplier:
                    type: array
                    items:
                      $ref: '#/components/schemas/Supplier'
                  totalPages:
                    type: integer
                  page:
                    type: integer
                  pageSize:
                    type: integer
                  totalRecords:
                    type: integer
      operationId: get-supplier-supplierID
      description: Retrieve the information of the supplier with the matching supplier ID.
      parameters:
        - schema:
            type: string
          in: query
          name: rut
          description: RUT del proveedor
        - schema:
            type: string
          in: query
          name: page
          required: true
        - schema:
            type: string
          in: query
          name: pagesize
          required: true
        - schema:
            type: string
          in: query
          name: orderAttribute
        - schema:
            type: string
          in: query
          name: order
        - schema:
            type: string
          in: header
          name: apikey
        - schema:
            type: string
          in: header
          name: username
    patch:
      summary: Actualizaci√≥n parcial de Proveedores
      operationId: patch-supplier-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Supplier'
  /supplier:
    post:
      summary: Create Supplier
      tags:
        - supplier
      operationId: post-supplier
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '504':
          description: Gateway Timeout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Supplier'
            examples: {}
        description: Post the necessary fields for the API to create a new supplier.
      description: Create a new supplier.
      parameters:
        - schema:
            type: string
          in: header
          name: userId
          description: id of the user who does the action
        - schema:
            type: string
          in: header
          name: apikey
          description: authorization key
    parameters: []
    get:
      summary: ''
      operationId: get-supplier
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  suppliers:
                    type: array
                    items:
                      $ref: '#/components/schemas/Supplier'
                  pageMeta:
                    $ref: '#/components/schemas/PageMeta'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      parameters:
        - schema:
            type: string
            enum:
              - ASC
              - DESC
            default: DESC
          in: query
          name: order
          description: order of the results based on create-dae
        - schema:
            type: number
            example: 1
          in: query
          name: page
          description: the page number
          required: true
        - schema:
            type: number
            example: 10
            default: 10
          in: query
          name: take
          description: number of rows per page
        - schema:
            type: array
          in: query
          name: status
          style: form
          description: provider status
      description: Get suppliers by searching criteria and by pages
  '/supplier/{id}/evaluation':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Evaluation'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: get-supplier-id-evaluation
      parameters:
        - schema:
            type: string
          in: query
          name: status
      description: 'This endpoint allow us to get the list of evaluations assigned to a supplier. You can filter by status (there will be only one with status "STARTED", which is the active one)'
  '/supplier/{id}/evaluation/{idEval}/result':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
      - schema:
          type: string
        name: idEval
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: get-supplier-id-evaluation-idEval-result
    post:
      summary: POST a result
      operationId: post-supplier-id-evaluation-idEval-result
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      parameters:
        - schema:
            type: string
          in: header
          name: userId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Result'
      description: This endpoint allow us to register the result of an evaluation
components:
  schemas:
    Supplier:
      title: Supplier
      type: object
      description: Modelo del proveedor
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
        name:
          type: string
          minLength: 1
          maxLength: 100
        fantasyName:
          type: string
          minLength: 0
          maxLength: 100
        personType:
          type: string
          enum:
            - NATURAL
            - JURIDICO
        origin:
          type: string
          enum:
            - NACIONAL
            - INTERNACIONAL
        sapCode:
          type: string
          minLength: 0
          maxLength: 30
        status:
          type: string
          enum:
            - APPROVED
            - REJECTED
            - PENDING
            - REGISTERING
            - READY
            - ERROR
        rut:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        legalAgent:
          $ref: '#/components/schemas/Contact'
        purchaseOrderContact:
          $ref: '#/components/schemas/Contact'
        societies:
          type: array
          items:
            $ref: '#/components/schemas/Entity'
        payment:
          $ref: '#/components/schemas/Payment'
        statusLog:
          type: array
          items:
            $ref: '#/components/schemas/StatusLog'
        accountGroup:
          type: string
          enum:
            - DIST
            - ACREE
        treasuryGroup:
          type: string
          enum:
            - GASTO
            - EXISTENCIA
        log:
          $ref: '#/components/schemas/Log'
        documents:
          type: array
          items:
            $ref: '#/components/schemas/FileMeta'
      required:
        - name
        - origin
        - rut
        - legalAgent
    Address:
      title: Address
      type: object
      properties:
        id:
          type: number
        country:
          type: number
          example: 1
        region:
          type: number
        city:
          type: number
        commune:
          type: number
        street:
          type: string
        zipCode:
          type: string
    Payment:
      title: Payment
      type: object
      properties:
        id:
          type: number
        currencyCod:
          type: string
          enum:
            - PEN
            - CLP
            - USD
            - ARS
            - EUR
        condition:
          type: string
          enum:
            - 30_DAYS
            - 15_DAYS
    Contact:
      title: Contact
      type: object
      properties:
        id:
          type: number
        names:
          type: string
        lastnames:
          type: string
        rut:
          type: string
        email:
          type: string
        phone:
          type: string
        language:
          type: string
          enum:
            - INGLES
            - ESPANIOL
          default: ESPANIOL
        businessArea:
          type: string
          enum:
            - VENTAS
        jobTitle:
          type: string
          enum:
            - JEFE_VENTAS
      required:
        - names
        - lastnames
        - rut
    Entity:
      title: Entity
      type: object
      properties:
        id:
          type: string
          example: ARPM
        name:
          type: string
          example: Arcoprime
      required:
        - id
        - name
    StatusLog:
      title: StatusLog
      type: object
      properties:
        user:
          type: string
          example: frojas@arcoprime.cl
          description: Identifier of the user who did the change of status.
        timestamp:
          type: string
          format: date-time
          example: '2018-05-15T14:51:12.402+00:00'
        newStatus:
          type: string
          enum:
            - NEW
            - PENDING
            - APPROVED
            - REJECED
            - REGISTERING
            - READY
            - ERROR
          description: This is the current status configured for the supplier
        oldStatus:
          type: string
          enum:
            - NEW
            - PENDING
            - APPROVED
            - REJECED
            - REGISTERING
            - READY
            - ERROR
          description: This is the old status that has been changed for the supplier.
    Log:
      title: Log
      type: object
      properties:
        createDate:
          type: string
          format: date-time
          example: '2018-05-15T14:51:12.402+00:00'
        updateDate:
          type: string
          format: date-time
          example: '2018-05-15T14:51:12.402+00:00'
        createUser:
          type: string
          example: frojas@arcoprime.cl
        updateUser:
          type: string
          example: frojas@arcoprime.cl
      description: Model to support logging information
    FileMeta:
      title: FileMeta
      type: object
      properties:
        code:
          type: string
          example: cacf2e09-9647-4f84-9d5e-5ddcb37d4cc0
        format:
          type: string
          enum:
            - JPG
            - PNG
            - PDF
        originalFilename:
          type: string
        fileSize:
          type: number
        domain:
          type: string
          enum:
            - SUPPLIER
            - PRODUCT
        content:
          type: string
          enum:
            - ROL
            - PEP
        status:
          type: number
          minimum: 0
          maximum: 1
          default: 1
          description: '1: Activo, 0: Inactivo'
      required:
        - code
        - format
        - originalFilename
        - fileSize
        - domain
        - content
    Error:
      title: Error
      type: object
      properties:
        code:
          type: string
          enum:
            - BUSINNESS_EXCEPTION
        message:
          type: string
          example: Usuario no existe
    PageMeta:
      title: PageMeta
      type: object
      description: pagination data
      properties:
        page:
          type: number
          description: current page
        take:
          type: number
          description: number of rows per page
        totalRecords:
          type: number
          description: total number of records
        pageCount:
          type: number
          description: total number of pages
        hasPreviusPage:
          type: boolean
          description: this flag means there is a previous page to retrieve
        hasNextPage:
          type: boolean
          description: this flag means there is a next page to retrieve
    Evaluation:
      title: Evaluation
      type: object
      properties:
        id:
          type: number
        status:
          type: string
          enum:
            - STARTED
            - CLOSED
          default: STARTED
        evaluationDate:
          type: string
          format: date-time
        user:
          $ref: '#/components/schemas/User'
        notificationSent:
          type: boolean
        results:
          type: array
          items:
            $ref: '#/components/schemas/Result'
        supplierSummary:
          $ref: '#/components/schemas/SupplierSummary'
    User:
      title: User
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        lastname:
          type: string
    Result:
      title: Result
      type: object
      properties:
        id:
          type: number
        user:
          $ref: '#/components/schemas/User'
        comment:
          type: string
        qualification:
          type: string
          enum:
            - APPROVED
            - REJECTED
        evidence:
          type: array
          items:
            $ref: '#/components/schemas/FileMeta'
      required:
        - qualification
        - evidence
    SupplierSummary:
      title: SupplierSummary
      type: object
      properties:
        name:
          type: string
        rut:
          type: string
        origin:
          type: string
        legalAgentName:
          type: string
        legalAgentLastnames:
          type: string
        legalAgentRut:
          type: string
  securitySchemes: {}
tags:
  - name: supplier
