openapi: 3.1.0
info:
  title: helper-api
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  /document:
    post:
      summary: Upload a new file
      operationId: post-user
      responses:
        '200':
          description: User Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                New User Bob Fellow:
                  value:
                    id: 12
                    firstName: Bob
                    lastName: Fellow
                    email: bob.fellow@gmail.com
                    dateOfBirth: '1996-08-24'
                    emailVerified: false
                    createDate: '2020-11-18'
        '400':
          description: Missing Required Information
        '409':
          description: Email Already Taken
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                document:
                  $ref: '#/components/schemas/Document'
            examples:
              Create User Bob Fellow:
                value:
                  firstName: Bob
                  lastName: Fellow
                  email: bob.fellow@gmail.com
                  dateOfBirth: '1996-08-24'
        description: Post the necessary fields for the API to upload a file
      description: Upload a file
    parameters: []
  /address/country:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Country'
      operationId: get-address-country
  /address/city:
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      operationId: get-address-city
      parameters:
        - schema:
            type: string
            example: CL
          in: query
          name: countryCode
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/City'
  /address/region:
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      operationId: get-address-region
      parameters:
        - schema:
            type: string
          in: query
          name: cityCode
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Region'
  /address/commune:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Commune'
      operationId: get-address-communa
      parameters:
        - schema:
            type: string
          in: query
          name: regionCode
    parameters: []
components:
  schemas:
    Document:
      title: Document
      type: object
      properties:
        id:
          type: string
          example: UUID
        type:
          type: string
          enum:
            - ROL
            - EVIDENCIA
        originalFilename:
          type: string
        format:
          type: string
          enum:
            - PNG
            - JPG
            - PDF
        status:
          type: string
        timestamp:
          type: string
        file:
          type: string
          format: binary
    Country:
      title: Country
      type: object
      properties:
        code:
          type: string
          description: ISO standard
          example: CL
        name:
          type: string
          example: Chile
        id:
          type: number
          example: 1
    City:
      title: City
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        id:
          type: number
    Region:
      title: Region
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        id:
          type: number
    Commune:
      title: Commune
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        id:
          type: integer
